import React, { useState } from "react";
import { FlashCardService } from "@/services/FlashCardService.jsx";
import Swal from "sweetalert2";

const CreateFlashCardList = ({ isOpen, onClose, onCreated }) => {
    const [name, setName] = useState("");
    const [description, setDescription] = useState("");
    const [loading, setLoading] = useState(false);

    const handleSubmit = async (e) => {
        e.preventDefault();
        if (!name.trim() || !description.trim()) {
            Swal.fire("‚ö†Ô∏è Thi·∫øu th√¥ng tin", "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!", "warning");
            return;
        }
        setLoading(true);
        try {
            const data = await FlashCardService.createFlashcardList(name, description);
            if (data.success) {
                await Swal.fire("üéâ Th√†nh c√¥ng", "T·∫°o danh s√°ch flashcard th√†nh c√¥ng!", "success");
                setName("");
                setDescription("");
                onCreated();
                onClose();
            } else {
                Swal.fire("‚ùå L·ªói", data.message || "C√≥ l·ªói x·∫£y ra.", "error");
            }
        } catch (error) {
            console.error(error);
            Swal.fire("‚ùå L·ªói", "L·ªói khi t·∫°o flashcard: " + error.message, "error");
        }
        setLoading(false);
    };

    if (!isOpen) return null;

    return (
        <div
            className="custom-modal-overlay"
            onClick={onClose}
        >
            <div
                className="custom-modal"
                onClick={(e) => e.stopPropagation()}
            >
                <div className="custom-modal-header">
                    <h5>T·∫†O DANH S√ÅCH FLASHCARD M·ªöI</h5>
                    <button className="close-btn" onClick={onClose}>√ó</button>
                </div>
                <form onSubmit={handleSubmit}>
                    <div className="custom-modal-body">
                        <div className="mb-3">
                            <label className="form-label">T√™n danh s√°ch:</label>
                            <input
                                type="text"
                                className="form-control"
                                value={name}
                                onChange={e => setName(e.target.value)}
                                placeholder="Nh·∫≠p t√™n danh s√°ch"
                                required
                            />
                        </div>
                        <div className="mb-3">
                            <label className="form-label">M√¥ t·∫£:</label>
                            <textarea
                                className="form-control"
                                value={description}
                                onChange={e => setDescription(e.target.value)}
                                placeholder="M√¥ t·∫£ danh s√°ch (t·ªëi ƒëa 500 k√Ω t·ª±)"
                                rows={4}
                                maxLength={500}
                                required
                            />
                            <small className="text-muted">{description.length}/500 k√Ω t·ª±</small>
                        </div>
                    </div>
                    <div
                        className="custom-modal-footer"
                        style={{
                            display: "flex",
                            justifyContent: "space-between",
                            alignItems: "center"
                        }}
                    >
                        <button
                            type="button"
                            className="footer-btn"
                            onClick={onClose}
                            disabled={loading}
                        >
                            <i className="fas fa-times"></i>ƒê√≥ng
                        </button>
                        <button
                            type="submit"
                            className="footer-btn"
                            disabled={loading}
                        >
                            <i className="fas fa-save"></i>{loading ? "ƒêang l∆∞u..." : "L∆∞u"}
                        </button>
                    </div>
                </form>
            </div>
        </div>
    );
};

export default CreateFlashCardList;