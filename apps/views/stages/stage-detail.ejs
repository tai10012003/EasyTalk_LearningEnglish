<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chặng Thử Thách</title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="/static/js/authentication.js"></script>
    <link rel="icon" href="/static/images/favicon.png">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/static/css/bootstrap.min.css">
    <!-- Animate CSS -->
    <link rel="stylesheet" href="/static/css/animate.css">
    <!-- Owl Carousel CSS -->
    <link rel="stylesheet" href="/static/css/owl.carousel.min.css">
    <!-- Themify Icons -->
    <link rel="stylesheet" href="/static/css/themify-icons.css">
    <!-- Flaticon CSS -->
    <link rel="stylesheet" href="/static/css/flaticon.css">
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="/static/css/magnific-popup.css">
    <!-- Swiper CSS -->
    <link rel="stylesheet" href="/static/css/slick.css">    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <!-- Custom Styles -->
    <link rel="stylesheet" href="/static/css/style.css">
    <link rel="stylesheet" href="/static/css/main.css">

    <style>
        .stage-container {
            margin: 130px auto 50px auto;
            max-width: 800px;
            padding: 25px;
            box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            background-color: #fff;
            position: relative;
        }

        /* Exit button */
        .exit-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: transparent;
            border: none;
            font-size: 24px;
            cursor: pointer;
        }

        .exit-btn:hover {
            color: red;
        }

        /* Progress Bar */
        .progress {
            height: 20px;
            background-color: #f5f5f5;
            border-radius: 8px;
            margin-top: 20px;
        }

        .progress-bar {
            background-color: #4caf50;
        }
        .form-check {
            padding-left: 0;
        }
        .form-check-label {
            display: block;
            padding: 10px;
            border: 1px solid #ced4da;
            border-radius: 5px;
            margin-bottom: 10px;
            cursor: pointer;
            background-color: #fff;
        }

        /* Hide the actual radio input */
        .form-check-input {
            display: none;
        }

        /* When radio is checked, highlight the label */
        .form-check-input:checked + .form-check-label {
            border-color: rgb(82, 82, 166);
            font-weight: bold;
            background-color: #e0e0ff;
        }

        .correct-answer {
            background-color: #aceebb !important;
        }

        .incorrect-answer {
            background-color: #eab3b8 !important;
        }
        .question-card h5 {
            line-height: 1.6;
        }
        .explanation {
            border: 1px solid cadetblue;
            padding: 10px;
            font-size: 15px;
            font-weight: bold;
        }
        /* Hide the 'Next' button initially */
        .next-slide, .complete-stage {
            display: none;
            margin-top: 20px;
            width: 100%;
            padding: 10px;
        }

        .result-content {
            text-align: center;
        }
        .result-screen h2 {
            margin: 10px 0 20px 0;
        }
        .result-content p{
            margin: 20px 0;
            color: black;
            font-size: 16px;
        }
        .result-number {
            font-weight: bold;
            color: black;
            font-size: 16px;
        }
        .result-percentage {
            font-size: 16px;
            color: #17a2b8;
        }
        .result-icon {
            display: flex;
            align-items: center;
            justify-content: flex-start;
        }

        .result-icon img {
            width: 200px;
            height: auto;
        }

        .result-screen {
            margin: 130px auto 50px auto;
            max-width: 800px;
            padding: 25px;
            box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            background-color: #fff;
            position: relative;
            display: none;
        }
        .history-item {
            margin-bottom: 20px;
        }
        .history-item h5 {
            font-size: 16px;
            line-height: 1.6;
            font-weight: bold;
        }
        .history-item p {
            font-size: 16px;
            margin: 5px 0;
        }
        .speak-button {
            border: 1px solid #9ba0a6;
            background-color: #ffffff;
        }
        .modal-backdrop {
            background-color: rgba(0, 0, 0, 0.485);
        }
    </style>
</head>
<body>
    <%- include('../partials/menu.ejs') %>

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="stage-container">
                    <!-- Exit button -->
                    <button class="exit-btn" id="exitBtn">&times;</button>

                    <h3 class="text-center stage-title" style="text-transform: uppercase;"></h3>
                    <p class="text-center gate-title"></p>

                    <!-- Progress Bar -->
                    <div class="progress">
                        <div class="progress-bar" id="progressBar" role="progressbar" style="width: 0%;"></div>
                    </div>

                    <div id="stageCarousel" class="carousel slide" data-ride="carousel" data-interval="false">
                        <div class="carousel-inner"></div>
                    </div>
                </div>
                <!-- Result screen -->
                <div class="result-screen text-center">
                    <h2 class="text-center">KẾT QUẢ CHẶNG CỦA BẠN</h2>
                    <div class="row">
                        <div class="col-md-6 result-content">
                            <p>Tổng số câu: <span class="result-number" id="total-questions"></span></p>
                            <p>Số câu đúng: <span class="result-number correct" id="correct-answers"></span></p>
                            <p>Số câu sai: <span class="result-number incorrect" id="wrong-answers"></span></p>
                            <p>Tỷ lệ đúng: <span class="result-percentage" id="correct-percentage"></span>%</p>
                            <p>Điểm KN của bạn: <span class="result-number" id="experiencePoints"></span></p>
                        </div>
                        <div class="col-md-6 text-center result-icon">
                            <img src="" id="result-icon" alt="Icon kết quả">
                        </div>
                    </div>
                    <div class="d-flex flex-column align-items-center mt-3">
                        <button class="btn btn-success" style="width: 200px; margin-bottom: 10px;" id="viewHistoryBtn" data-toggle="modal" data-target="#historyModal">Xem lịch sử</button>
                        <button class="btn btn-secondary" style="width: 200px; margin-bottom: 10px;" onclick="location.reload()">Làm lại</button>
                        <button class="btn btn-danger" style="width: 200px;" onclick="location.href='/journey'">Thoát</button>
                    </div>
                </div>
                <div class="modal" id="historyModal" tabindex="-1" role="dialog" aria-labelledby="historyModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h3 class="modal-title" id="historyModalLabel">LỊCH SỬ LÀM BÀI CHẶNG THỬ THÁCH</h3>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div id="historyContent"></div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <%- include('../partials/footer.ejs') %>
    <script>
        let correctAnswers = 0;
        let totalQuestions = 0;
        const questionResults = [];
        let currentExperiencePoints = 0;

        document.addEventListener("DOMContentLoaded", async () => {
            const stageId = window.location.pathname.split("/").pop();
            const token = localStorage.getItem("token");
            try {
                const response = await fetch(`/stage/api/stage/detail/${stageId}`, {
                    method: 'GET',
                    headers: {
                        "Authorization": `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });
                const data = await response.json();
                if (response.ok) {
                    renderStageDetail(data.stage, data.userProgress);
                } else {
                    alert(data.error || 'Không thể tải chi tiết chặng.');
                }
            } catch (error) {
                alert('Đã xảy ra lỗi khi tải dữ liệu chặng. Vui lòng thử lại sau.');
            }
            function renderStageDetail(stage, userProgress) {
                $('.stage-title').text(stage.title);
                $('.gate-title').text(stage.gate.title);
                $('#experiencePoints').text(userProgress.experiencePoints);

                const carouselInner = $('.carousel-inner');
                stage.questions.forEach((question, index) => {
                    const isActive = index === 0 ? 'active' : '';
                    questionResults.push({
                        question: question.question,
                        userAnswer: "Chưa trả lời",
                        correctAnswer: question.correctAnswer,
                        isCorrect: false,
                        explanation: question.explanation
                    });

                    const questionCard = `
                        <div class="carousel-item ${isActive}">
                            <div class="question-card p-3" data-correct-answer="${question.correctAnswer}" data-explanation="${question.explanation}" data-type="${question.type}">
                                <h4 class="mt-3 mb-3">${getQuestionTypeTitle(question.type)}</h4>
                                <h5>${index + 1}. ${question.question}</h5>
                                <form id="question-form-${index}" class="question-form mt-4">
                                    ${renderQuestionOptions(question, index)}
                                    <div class="explanation mt-4" style="display: none;"></div>
                                    <button type="button" class="btn btn-success submit-answer mt-4" data-index="${index}" style="width: 100%; padding: 10px;">Kiểm tra</button>
                                    <button type="button" class="btn btn-secondary next-slide mt-4" data-slide="next" data-index="${index}" style="display: none;">Tiếp theo</button>
                                    <button class="btn btn-primary complete-stage mt-4" data-index="${index}" style="display: none;">Hoàn thành</button>
                                </form>
                            </div>
                        </div>`;
                    carouselInner.append(questionCard);
                });

                totalQuestions = stage.questions.length;
            }

            function getQuestionTypeTitle(type) {
                if (type === 'multiple-choice') return 'Chọn đáp án đúng:';
                if (type === 'fill-in-the-blank') return 'Điền vào chỗ trống:';
                if (type === 'translation') return 'Dịch câu dưới đây:';
                return '';
            }

            function renderQuestionOptions(question, index) {
                if (question.type === 'multiple-choice') {
                    return question.options.map(option => `
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="answer" value="${option}" id="option-${option}-${index}">
                            <label class="form-check-label" for="option-${option}-${index}">${option}</label>
                        </div>`).join('').toLowerCase();
                } else {
                    return `<textarea class="form-control question-input" name="answer" rows="4" placeholder="Nhập câu trả lời của bạn"></textarea>`;
                }
            }

            $(".submit-answer").click(function() {
                const index = $(this).data("index");
                const questionCard = $(this).closest(".question-card");
                const correctAnswer = questionCard.data("correct-answer").trim().toLowerCase();
                const explanation = questionCard.data('explanation');
                const questionType = questionCard.data('type');
                let userAnswer = "";

                if (questionType === 'multiple-choice') {
                    const selectedOption = $(`input[name="answer"]:checked`, `#question-form-${index}`);
                    if (selectedOption.length === 0) {
                        alert("Vui lòng chọn một đáp án.");
                        return;
                    }
                    userAnswer = selectedOption.val().toLowerCase();
                } else {
                    userAnswer = $(`textarea[name="answer"]`, `#question-form-${index}`).val().trim().toLowerCase();
                    if (userAnswer === '') {
                        alert("Vui lòng nhập câu trả lời.");
                        return;
                    }
                }

                const isCorrect = userAnswer === correctAnswer;
                if (isCorrect) {
                    correctAnswers++;
                    questionCard.find('.explanation').html(`Bạn đã trả lời đúng.<br> Giải thích: ${explanation}`).show();
                    questionCard.find(`input[name="answer"]:checked + .form-check-label`).addClass('correct-answer');
                    questionCard.find(`textarea[name="answer"]`).addClass('correct-answer');
                } else {
                    questionCard.find('.explanation').html(`Bạn đã trả lời sai. Đáp án đúng là: ${correctAnswer}.<br> Giải thích: ${explanation}`).show();
                    questionCard.find(`input[name="answer"]:checked + .form-check-label`).addClass('incorrect-answer');
                    questionCard.find(`input[name="answer"][value="${correctAnswer}"] + .form-check-label`).addClass('correct-answer');
                    questionCard.find(`textarea[name="answer"]`).addClass('incorrect-answer');
                }
                questionResults[index].userAnswer = userAnswer || "Không trả lời";
                questionResults[index].isCorrect = isCorrect;

                $(`#question-form-${index} input, #question-form-${index} textarea`).prop('disabled', true).addClass('disabled');
                $(this).prop('disabled', true).addClass('disabled');

                if (index < totalQuestions - 1) {
                    $(this).siblings('.next-slide').show();
                } else {
                    $(this).siblings('.complete-stage').show();
                }
            });

            $('#viewHistoryBtn').click(function() {
                const historyContent = $('#historyContent');
                historyContent.empty();

                questionResults.forEach((result, index) => {
                    const resultHtml = `
                        <div class="history-item">
                            <h5>Câu ${index + 1}: ${result.question}</h5>
                            <p><strong>Đáp án của bạn:</strong> ${result.userAnswer}</p>
                            <p><strong>Đáp án đúng:</strong> ${result.correctAnswer}</p>
                            <p><strong>Kết quả:</strong> ${result.isCorrect ? '<span style="color: green;">Đúng</span>' : '<span style="color: red;">Sai</span>'}</p>
                            <p><strong>Giải thích:</strong> ${result.explanation}</p>
                            <hr>
                        </div>
                    `;
                    historyContent.append(resultHtml);
                });
            });
            
            $('.next-slide').on('click', function() {
                $('#stageCarousel').carousel('next');
            });

            $('#exitBtn').click(function() {
                if (confirm('Bạn chắc chắn muốn thoát? Bạn sẽ mất toàn bộ bài kiểm tra nếu thoát.')) {
                    window.location.href = '/journey';
                }
            });
            // Update progress bar after answering questions
            $('.next-slide, .complete-stage').click(function() {
                let progressStep = 100 / totalQuestions;
                let currentProgress = $('#progressBar').width() / $('.progress').width() * 100;
                currentProgress += progressStep;
                $('#progressBar').css('width', `${currentProgress}%`);
            });
            
            $('.complete-stage').click(async function(event) {
                event.preventDefault();
                const token = localStorage.getItem("token");
                try {
                    const response = await fetch(`/stage/api/stage/complete/${stageId}`, {
                        method: 'POST',
                        headers: {
                            "Authorization": `Bearer ${token}`,
                            'Content-Type': 'application/json'
                        }
                    });
                    const data = await response.json();
                    if (response.ok) {
                        alert(data.message);
                        const newExperiencePoints = parseInt($('#experiencePoints').text()) + 10;
                        $('#experiencePoints').text(newExperiencePoints);
                        showResultScreen();
                    } else {
                        alert(data.error || 'Không thể mở khóa chặng.');
                    }
                } catch (error) {
                    alert('Đã xảy ra lỗi. Vui lòng thử lại sau.');
                }
            });
            // Hiển thị trang kết quả
            function showResultScreen() {
                // Ẩn trang câu hỏi
                $('.stage-container').hide();
                // Hiển thị trang kết quả
                $('.result-screen').show();

                // Tính toán kết quả
                let wrongAnswers = totalQuestions - correctAnswers;
                let correctPercentage = (correctAnswers / totalQuestions) * 100;
                let iconSrc = correctPercentage >= 50 ? '/static/images/iconhappy.png' : '/static/images/iconsad.png';

                // Cập nhật thông tin kết quả
                $('#total-questions').text(totalQuestions);
                $('#correct-answers').text(correctAnswers);
                $('#wrong-answers').text(wrongAnswers);
                $('#correct-percentage').text(correctPercentage.toFixed(2));
                $('#result-icon').attr('src', iconSrc);

                // Đánh dấu bài kiểm tra đã hoàn thành
                isTestCompleted = true;
            }
        });
    </script>
    <script src="/static/js/jquery-1.12.1.min.js"></script>
    <script src="/static/js/popper.min.js"></script>
    <script src="/static/js/bootstrap.min.js"></script>
    <script src="/static/js/jquery.magnific-popup.js"></script>
    <script src="/static/js/swiper.min.js"></script>
    <script src="/static/js/masonry.pkgd.js"></script>
    <script src="/static/js/owl.carousel.min.js"></script>
    <script src="/static/js/jquery.nice-select.min.js"></script>
    <script src="/static/js/slick.min.js"></script>
    <script src="/static/js/jquery.counterup.min.js"></script>
    <script src="/static/js/waypoints.min.js"></script>
    <script src="/static/js/custom.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>   
</body>
</html> 