<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stage List</title>
    <script src="/static/js/checkadmin.js"></script>
    <script src="/static/admin/assets/js/plugin/webfont/webfont.min.js"></script>
    <link rel="stylesheet" type="text/css" href="/static/css/road.css">
    <script>
        WebFont.load({
            google: { families: ["Public Sans:300,400,500,600,700"] },
            custom: {
                families: [
                    "Font Awesome 5 Solid",
                    "Font Awesome 5 Regular",
                    "Font Awesome 5 Brands",
                    "simple-line-icons",
                ],
                urls: ["/static/admin/assets/css/fonts.min.css"],
            },
            active: function () {
                sessionStorage.fonts = true;
            },
        });
    </script>

    <!-- CSS Files -->
    <link rel="stylesheet" href="/static/admin/assets/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/static/admin/assets/css/plugins.min.css" />
    <link rel="stylesheet" href="/static/admin/assets/css/kaiadmin.min.css" />
</head>
<body>
    <div class="wrapper">
        <!-- Sidebar -->
        <%- include('../admin/partials/menu.ejs') %>

        <!-- Content -->
        <div class="main-panel">
            <div class="content">
                <div class="page-inner">
                    <div class="container stage-container" id="stage-list">
                        <h1 class="text-center stage-title">STAGE LIST</h1>
                        <a href="/admin/stage/add" class="btn btn-primary btn-stage-add">+ Add New Stage</a>
                        <table class="table table-bordered stage-table">
                            <thead class="thead-light">
                                <tr>
                                    <th class="stage-header">#</th>
                                    <th class="stage-header">Title</th>
                                    <th class="stage-header">Gate</th>
                                    <th class="stage-header">Questions</th>
                                    <th class="stage-header">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="stageTableBody">
                                <!-- Nội dung các stage sẽ được thêm ở đây -->
                            </tbody>
                        </table>
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center" id="pagination-controls">
                                <!-- Pagination links will be populated here via JavaScript -->
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Script to Fetch Data from API -->
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Bắt đầu với trang đầu tiên
            fetchStages(1);
        });

        // Hàm lấy danh sách stages từ API
        function fetchStages(page = 1) {
            fetch(`/admin/stage/api/stages?page=${page}&limit=2`) // Lấy dữ liệu với phân trang
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.data.length > 0) {
                        const stageTableBody = document.getElementById("stageTableBody");
                        stageTableBody.innerHTML = ''; // Xóa nội dung cũ

                        data.data.forEach((stage, index) => {
                            const row = document.createElement('tr');
                            row.classList.add('stage-row');

                            row.innerHTML = `
                                <td class="stage-cell">${(page - 1) * 2 + index + 1}</td>
                                <td class="stage-cell">${stage.title}</td>
                                <td class="stage-cell">${stage.gateInfo ? stage.gateInfo.title : "No Gate Assigned"}</td>
                                <td class="stage-cell">${stage.questions.length} Questions</td>
                                <td class="stage-cell">
                                    <a href="/admin/stage/update/${stage._id}" class="btn btn-warning btn-stage-update">Update</a>
                                    <button class="btn btn-danger btn-stage-delete" onclick="deleteStage('${stage._id}')">Delete</button>
                                </td>
                            `;
                            stageTableBody.appendChild(row);
                        });

                        // Gọi hàm để hiển thị phân trang
                        renderPagination(data.currentPage, data.totalPages);
                    } else {
                        document.getElementById("stageTableBody").innerHTML = '<tr><td colspan="5" class="text-center">No stages found</td></tr>';
                    }
                })
                .catch(error => console.error('Error fetching stages:', error));
        }

        function renderPagination(currentPage, totalPages) {
            const paginationControls = document.getElementById("pagination-controls");
            
            if (!paginationControls) {
                console.error("Pagination controls element not found");
                return;
            }

            paginationControls.innerHTML = ''; // Xóa các nút phân trang cũ

            // Thêm nút "Previous" nếu trang hiện tại lớn hơn 1
            if (currentPage > 1) {
                paginationControls.innerHTML += `
                    <li class="page-item">
                        <a class="page-link" href="#" onclick="fetchStages(${currentPage - 1})">&laquo; Previous</a>
                    </li>
                `;
            }

            // Thêm nút số trang
            for (let i = 1; i <= totalPages; i++) {
                paginationControls.innerHTML += `
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="fetchStages(${i})">${i}</a>
                    </li>
                `;
            }

            // Thêm nút "Next" nếu trang hiện tại nhỏ hơn tổng số trang
            if (currentPage < totalPages) {
                paginationControls.innerHTML += `
                    <li class="page-item">
                        <a class="page-link" href="#" onclick="fetchStages(${currentPage + 1})">Next &raquo;</a>
                    </li>
                `;
            }
        }

        // Function to delete stage
        function deleteStage(id) {
            if (confirm('Are you sure you want to delete this stage?')) {
                fetch(`/admin/stage/delete/${id}`, {
                    method: 'DELETE',
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Stage deleted successfully!');
                        fetchStages(1); // Reload the stages list after successful deletion
                    } else {
                        alert('Error deleting stage: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error deleting stage:', error);
                    alert('An error occurred while deleting the stage.');
                });
            }
        }
    </script>

    <script src="/static/admin/assets/js/core/jquery-3.7.1.min.js"></script>
    <script src="/static/admin/assets/js/core/popper.min.js"></script>
    <script src="/static/admin/assets/js/core/bootstrap.min.js"></script>
    <script src="/static/admin/assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
    <script src="/static/admin/assets/js/plugin/datatables/datatables.min.js"></script>
    <script src="/static/admin/assets/js/kaiadmin.min.js"></script>
</body>
</html>
