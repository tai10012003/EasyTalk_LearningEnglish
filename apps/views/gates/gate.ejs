<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gate List</title>
    <!-- Fonts and icons -->
    <script src="/static/admin/assets/js/plugin/webfont/webfont.min.js"></script>
    <link rel="stylesheet" type="text/css" href="/static/css/road.css">
    <script>
        WebFont.load({
            google: { families: ["Public Sans:300,400,500,600,700"] },
            custom: {
                families: [
                    "Font Awesome 5 Solid",
                    "Font Awesome 5 Regular",
                    "Font Awesome 5 Brands",
                    "simple-line-icons",
                ],
                urls: ["/static/admin/assets/css/fonts.min.css"],
            },
            active: function () {
                sessionStorage.fonts = true;
            },
        });
    </script>

    <!-- CSS Files -->
    <link rel="stylesheet" href="/static/admin/assets/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/static/admin/assets/css/plugins.min.css" />
    <link rel="stylesheet" href="/static/admin/assets/css/kaiadmin.min.css" />
    <style>
        /* Modal container */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        /* Modal content */
        .modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            width: 400px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        .modal-content h3 {
            text-align: center;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        .btn-submit {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-submit:hover {
            background-color: #0056b3;
        }
    </style>
</head>

<body>
    <div class="wrapper">
        <%- include('../admin/partials/menu.ejs') %>
        <div class="main-panel">
            <div class="content">
                <div class="page-inner">
                    <div class="gate-container">
                        <h1 class="text-center gate-title">GATE LIST</h1>

                        <!-- Nút để mở modal thêm Gate -->
                        <div class="text-right mb-3">
                            <button class="btn btn-primary" id="openGateModal">+ Add New Gate</button>
                        </div>

                        <!-- Modal để thêm Gate -->
                        <div id="gateModal" class="modal">
                            <div class="modal-content">
                                <span class="close" id="closeGateModal">&times;</span>
                                <h3>Thêm Cổng Mới</h3>
                                <form id="gateForm">
                                    <div class="form-group">
                                        <label for="gateName">Tên Cổng: </label>
                                        <input type="text" id="gateName" class="form-control" placeholder="Nhập tên cổng">
                                    </div>
                                    <div class="form-group">
                                        <label for="journeySelect">Chọn Hành Trình: </label>
                                        <select id="journeySelect" class="form-control">
                                            <% journeys.forEach(journey => { %>
                                                <option value="<%= journey._id %>"><%= journey.title %></option>
                                            <% }) %>
                                        </select>
                                    </div>
                                    <button type="submit" class="btn-submit">Thêm</button>
                                </form>
                            </div>
                        </div>

                        <!-- Modal để sửa Gate -->
                        <div id="editGateModal" class="modal">
                            <div class="modal-content">
                                <span class="close" id="closeEditGateModal">&times;</span>
                                <h3>Sửa Cổng</h3>
                                <form id="editGateForm">
                                    <input type="hidden" id="editGateId"> <!-- Lưu id của gate -->
                                    <div class="form-group">
                                        <label for="editGateName">Tên Cổng: </label>
                                        <input type="text" id="editGateName" class="form-control" placeholder="Nhập tên cổng mới">
                                    </div>
                                    <div class="form-group">
                                        <label for="editJourneySelect">Chọn Hành Trình Mới: </label>
                                        <select id="editJourneySelect" class="form-control">
                                            <% journeys.forEach(journey => { %>
                                                <option value="<%= journey._id %>"><%= journey.title %></option>
                                            <% }) %>
                                        </select>
                                    </div>
                                    <button type="submit" class="btn-submit">Lưu</button>
                                </form>
                            </div>
                        </div>


                        <!-- Danh sách Gate -->
                        <table class="table table-bordered gate-table">
                            <thead class="thead-light">
                                <tr>
                                    <th>#</th>
                                    <th>Gate Name</th>
                                    <th>Journey</th>
                                    <th>Stages</th>
                                    <th>Created At</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="gateList">
                                <% gates.forEach((gate, index) => { %>
                                    <tr>
                                        <td><%= index + 1 %></td>
                                        <td><%= gate.title %></td>
                                        <td><%= gate.journey.title %></td>
                                        <td><%= gate.stages.length %> Stages</td>
                                        <td><%= new Date(gate.createdAt).toLocaleString('vi-VN', {
                                            day: '2-digit',
                                            month: '2-digit',
                                            year: 'numeric',
                                            hour: '2-digit',
                                            minute: '2-digit',
                                            hour12: false
                                        }) %></td>
                                        <td>
                                            <button class="btn btn-warning btn-edit-gate" data-id="<%= gate._id %>" data-name="<%= gate.title %>" data-journey="<%= gate.journey._id %>">Sửa</button>
                                            <button class="btn btn-danger btn-delete-gate" data-id="<%= gate._id %>">Xóa</button>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Hiển thị modal thêm Gate
        const gateModal = document.getElementById("gateModal");
        const openGateModalBtn = document.getElementById("openGateModal");
        const closeGateModalBtn = document.getElementById("closeGateModal");

        openGateModalBtn.onclick = function () {
            gateModal.style.display = "flex";
        }

        closeGateModalBtn.onclick = function () {
            gateModal.style.display = "none";
        }

        window.onclick = function (event) {
            if (event.target == gateModal) {
                gateModal.style.display = "none";
            }
        }

        document.getElementById("gateForm").onsubmit = async function (e) {
            e.preventDefault();

            const gateName = document.getElementById("gateName").value;
            const journeyId = document.getElementById("journeySelect").value;

            if (gateName && journeyId) {
                try {
                    const response = await fetch('/admin/gate/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ name: gateName, journeyId: journeyId })
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        throw new Error(data.error || 'Failed to add Gate');
                    }

                    alert(data.message);

                    // Tìm dòng tương ứng của Journey trong bảng
                    const journeyRowButton = document.querySelector(`button[data-id="${journeyId}"]`);
                    if (journeyRowButton) {
                        const journeyRow = journeyRowButton.parentElement.parentElement;
                        const gateCell = journeyRow.cells[2]; // Cột Gates
                        const currentGateCount = parseInt(gateCell.innerText) || 0;
                        gateCell.innerText = `${currentGateCount + 1} Gates`;
                    }

                    // Thêm Gate vào bảng mà không cần tải lại trang
                    const gateList = document.getElementById("gateList");
                    const newRow = document.createElement("tr");

                    const createdAt = new Date().toLocaleString('vi-VN', {
                        day: '2-digit',
                        month: '2-digit',
                        year: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit',
                        hour12: false
                    });

                    newRow.innerHTML = `
                        <td>#</td>
                        <td>${gateName}</td>
                        <td>${document.getElementById("journeySelect").selectedOptions[0].text}</td>
                        <td>0 Stages</td>
                        <td>${createdAt}</td>
                        <td>
                            <button class="btn btn-warning btn-edit-gate" data-id="${data.gate._id}" data-name="${gateName}" data-journey="${journeyId}">Sửa</button>
                            <button class="btn btn-danger btn-delete-gate" data-id="${data.gate._id}">Xóa</button>
                        </td>
                    `;
                    gateList.appendChild(newRow);

                    // Đóng modal và reset form
                    gateModal.style.display = "none";
                    document.getElementById("gateForm").reset();

                } catch (error) {
                    alert(error.message);
                }
            } else {
                alert("Vui lòng nhập tên cổng và chọn hành trình!");
            }
        };


        // Hiển thị modal sửa Gate
        const editGateModal = document.getElementById("editGateModal");
        const closeEditGateModalBtn = document.getElementById("closeEditGateModal");

        closeEditGateModalBtn.onclick = function () {
            editGateModal.style.display = "none"; // Đóng modal khi bấm "X"
        }

        window.onclick = function (event) {
            if (event.target == editGateModal) {
                editGateModal.style.display = "none";
            }
        }

        document.querySelectorAll(".btn-edit-gate").forEach(btn => {
            btn.addEventListener("click", function () {
                const gateId = this.getAttribute("data-id");
                const gateName = this.getAttribute("data-name");
                const journeyId = this.getAttribute("data-journey");

                document.getElementById("editGateId").value = gateId;
                document.getElementById("editGateName").value = gateName;
                document.getElementById("editJourneySelect").value = journeyId;

                editGateModal.style.display = "flex";
            });
        });

        // Xử lý form sửa Gate
        document.getElementById("editGateForm").onsubmit = async function (e) {
            e.preventDefault();

            const gateId = document.getElementById("editGateId").value;
            const newGateName = document.getElementById("editGateName").value;
            const newJourneyId = document.getElementById("editJourneySelect").value;

            if (newGateName && newJourneyId) {
                try {
                    const response = await fetch(`/admin/gate/update/${gateId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ name: newGateName, journeyId: newJourneyId })
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        throw new Error(data.error || 'Failed to update Gate');
                    }

                    alert(data.message);

                    const gateRow = document.querySelector(`button[data-id="${gateId}"]`).parentElement.parentElement;
                    if (gateRow) {
                        gateRow.cells[1].innerText = newGateName; // Cập nhật cột tên cổng
                        gateRow.cells[2].innerText = document.getElementById("editJourneySelect").selectedOptions[0].text;

                        const oldJourneyId = gateRow.getAttribute('data-journey-id');
                        if (oldJourneyId !== newJourneyId) {
                            const oldJourneyRowButton = document.querySelector(`button[data-id="${oldJourneyId}"]`);
                            if (oldJourneyRowButton) {
                                const oldJourneyRow = oldJourneyRowButton.parentElement.parentElement;
                                const oldGateCell = oldJourneyRow.cells[2];
                                const oldGateCount = parseInt(oldGateCell.innerText) || 0;
                                oldGateCell.innerText = `${oldGateCount - 1} Gates`;
                            }

                            const newJourneyRowButton = document.querySelector(`button[data-id="${newJourneyId}"]`);
                            if (newJourneyRowButton) {
                                const newJourneyRow = newJourneyRowButton.parentElement.parentElement;
                                const newGateCell = newJourneyRow.cells[2];
                                const newGateCount = parseInt(newGateCell.innerText) || 0;
                                newGateCell.innerText = `${newGateCount + 1} Gates`;
                            }

                            gateRow.setAttribute('data-journey-id', newJourneyId);
                        }

                        editGateModal.style.display = "none";
                        document.getElementById("editGateForm").reset();
                    }

                } catch (error) {
                    alert(error.message);
                }
            } else {
                alert("Vui lòng nhập tên cổng và chọn hành trình mới!");
            }
        };


        
        // Xử lý xóa Gate
        document.querySelectorAll(".btn-delete-gate").forEach(btn => {
            btn.addEventListener("click", function () {
                const gateId = this.getAttribute("data-id");
                const journeyId = this.closest('tr').getAttribute('data-journey-id');

                if (confirm("Bạn có chắc muốn xóa cổng này?")) {
                    fetch(`/admin/gate/delete/${gateId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message) {
                            alert(data.message);
                            this.parentElement.parentElement.remove();

                            const journeyRowButton = document.querySelector(`button[data-id="${journeyId}"]`);
                            if (journeyRowButton) {
                                const journeyRow = journeyRowButton.parentElement.parentElement;
                                const gateCell = journeyRow.cells[2];
                                const currentGateCount = parseInt(gateCell.innerText) || 0;
                                gateCell.innerText = `${currentGateCount - 1} Gates`;
                            }
                        } else if (data.error) {
                            alert(data.error);
                        }
                    })
                    .catch(error => {
                        alert("Failed to delete Gate");
                    });
                }
            });
        });

    </script>

    <script src="/static/admin/assets/js/core/jquery-3.7.1.min.js"></script>
    <script src="/static/admin/assets/js/core/popper.min.js"></script>
    <script src="/static/admin/assets/js/core/bootstrap.min.js"></script>
    <script src="/static/admin/assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
    <script src="/static/admin/assets/js/plugin/datatables/datatables.min.js"></script>
    <script src="/static/admin/assets/js/kaiadmin.min.js"></script>
</body>

</html>