<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Luy·ªán T·∫≠p Ph√°t √Çm</title>
    <link rel="icon" href="/static/images/favicon.png">
    <script src="/static/js/authentication.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/static/css/bootstrap.min.css">
    <!-- Animate CSS -->
    <link rel="stylesheet" href="/static/css/animate.css">
    <!-- Owl Carousel CSS -->
    <link rel="stylesheet" href="/static/css/owl.carousel.min.css">
    <!-- Themify Icons -->
    <link rel="stylesheet" href="/static/css/themify-icons.css">
    <!-- Flaticon CSS -->
    <link rel="stylesheet" href="/static/css/flaticon.css">
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="/static/css/magnific-popup.css">
    <!-- Swiper CSS -->
    <link rel="stylesheet" href="/static/css/slick.css">    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <!-- Custom Styles -->
    <link rel="stylesheet" href="/static/css/main.css">
</head>
<body>
    <%- include('../partials/menu.ejs') %>

    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div class="container exercises-detail-container">
                    <div id="exerciseCarousel" class="carousel slide" data-ride="carousel" data-interval="false">
                        <div class="carousel-inner" id="carousel-inner">

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="sidebar-exercise">
                    <div class="time-remaining text-center">
                        <span id="timeLabel">Th·ªùi gian c√≤n l·∫°i:</span> <span id="time">20:00</span>
                    </div>
                    <button id="submitQuizBtn" class="btn btn-success submit-btn mb-4">N·ªôp b√†i</button>
                    <h5 id="questionListTitle">Danh s√°ch c√¢u h·ªèi:</h5>
                    <div class="question-list mt-3" id="question-list">

                    </div>
                    <div id="completed-info" style="display: none; text-align: center;">
                        <h4>Th·ªùi gian ƒë√£ l√†m: <span id="completedTime"></span></h4>
                        <button class="btn btn-secondary mt-3" id="viewHistoryBtn" data-toggle="modal" data-target="#historyModal">Xem l·ªãch s·ª≠</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <%- include('../partials/footer.ejs') %>
    <script>
        $(document).ready(function() {
            let timeRemaining = 20 * 60;
            let correctAnswers = 0;
            let totalQuestions = $('.carousel-item').length;
            let timer;
            let mediaRecorder;
            let audioChunks = [];
            const carouselInner = $('#exerciseCarousel .carousel-inner');
            const questionList = $('#question-list');
            const exerciseId = window.location.pathname.split('/').pop();
            $.ajax({
                url: `/pronunciation-exercise/api/${exerciseId}`,
                method: 'GET',
                success: function(data) {
                    if (data && data.questions && data.questions.length > 0) {
                        totalQuestions = data.questions.length; 
                        data.questions.forEach((question, index) => {
                            const questionHtml = `
                                <div class="carousel-item ${index === 0 ? 'active' : ''}">
                                    <div class="question-card p-3" data-correct-answer="${question.correctAnswer}" data-explanation="${question.explanation}" data-type="${question.type}">
                                        ${question.type === 'multiple-choice' ? `
                                            <!-- N·ªôi dung c√¢u h·ªèi l·ª±a ch·ªçn -->
                                            <h4 class="question-title">Nghe v√† ch·ªçn ƒë√°p √°n ph√°t √¢m ƒë√∫ng: </h4>
                                            <h5 class="ques-id" id="ques-${index}">
                                                Question ${index + 1}:
                                                <span class="question-text" style="display: none;">${question.question}</span>
                                            </h5>
                                            <div class="d-flex justify-content-center align-items-center mt-3">
                                                <button id="speak-choice" class="speak-button btn-sm btn-outline" data-text="${question.question}">üîä</button>
                                            </div>
                                            <form id="question-form-${index}" class="mt-4">
                                                ${question.options
                                                .filter(option => option.trim() !== '')
                                                .map((option, optIndex) => `
                                                    <div class="form-check">
                                                        <input class="option-input" type="radio" name="answer-${index}" value="${option}" id="option-${optIndex}-${index}">
                                                        <label class="option-label" for="option-${optIndex}-${index}">
                                                            ${option}
                                                        </label>
                                                    </div>
                                                `).join('')}
                                                <div class="explanation mt-4" style="display: none;"></div>
                                                <button type="button" class="btn btn-success submit-answer mt-4" data-index="${index}">Ki·ªÉm tra</button>
                                            </form>
                                            <hr>
                                            <div class="d-flex justify-content-between mt-3">
                                                <button class="btn btn-secondary prev-slide" type="button" data-slide="prev" ${index === 0 ? 'disabled' : ''}>Quay l·∫°i</button>
                                                <button class="btn btn-secondary next-slide ml-5" type="button" data-slide="next" ${index === data.questions.length - 1 ? 'disabled' : ''}>Ti·∫øp theo</button>
                                            </div>
                                        ` : `
                                            <!-- N·ªôi dung c√¢u h·ªèi ph√°t √¢m l·∫°i -->
                                            <h4 class="question-title">Ph√°t √¢m l·∫°i sao cho ƒë√∫ng:</h4>
                                            <h5 class="ques-id" id="ques-${index}">
                                                <button class="speak-button btn-sm btn-outline mr-2" data-text="${question.question}">üîä</button>
                                                Question ${index + 1}:  <span class="question-text">${question.question}</span>
                                            </h5>
                                            <div class="mt-4" style="text-align: center;">
                                                <button type="button" class="btn record-btn" id="record-answer-${index}" data-index="${index}">
                                                    Ghi √¢m
                                                </button>
                                                <p id="recording-status-${index}" style="display: none; color: green; font-weight: bold;"></p>
                                                <div id="analysisResult-${index}" style="display: none; margin-top: 30px">
                                                    <audio id="user-audio-${index}" controls style="display: none; margin-bottom: 25px;"></audio>
                                                    <div id="accuracyDisplay-${index}" class="accuracy-display" style="font-size: 48px; font-weight: bold; margin: 20px 0;"></div>
                                                    <div class="detailed-analysis" id="detailedAnalysis-${index}"></div>
                                                </div>
                                            </div>
                                            <div class="explanation mt-4" style="display: none;"></div>
                                            <hr>
                                            <div class="d-flex justify-content-between mt-3">
                                                <button class="btn btn-secondary prev-slide" type="button" data-slide="prev" ${index === 0 ? 'disabled' : ''}>Quay l·∫°i</button>
                                                <button class="btn btn-secondary next-slide ml-5" type="button" data-slide="next" ${index === data.questions.length - 1 ? 'disabled' : ''}>Ti·∫øp theo</button>
                                            </div>
                                        `}
                                    </div>
                                </div>
                            `;
                            carouselInner.append(questionHtml);
    
                            questionList.append(`<button class="question-number btn btn-light" id="question-btn-${index}" data-index="${index}">${index + 1}</button>`);
                        });
    
                        $('.next-slide').on('click', function() {
                            $('#exerciseCarousel').carousel('next');
                        });
    
                        $('.prev-slide').on('click', function() {
                            $('#exerciseCarousel').carousel('prev');
                        });
                        $('.question-number').on('click', function() {
                            const index = $(this).data('index');
                            $('#exerciseCarousel').carousel(index);
                        });
                    } else {
                        carouselInner.html('<p class="text-center">Kh√¥ng c√≥ c√¢u h·ªèi n√†o trong b√†i t·∫≠p n√†y.</p>');
                    }
                },
                error: function(error) {
                    console.error('Error fetching pronunciation exercise:', error);
                }
            });
            function startTimer() {
                timer = setInterval(() => {
                    let minutes = Math.floor(timeRemaining / 60);
                    let seconds = timeRemaining % 60;
                    seconds = seconds < 10 ? '0' + seconds : seconds;
                    $('#time').text(minutes + ":" + seconds);
                    timeRemaining--;
                    if (timeRemaining < 0) {
                        clearInterval(timer);
                        alert("H·∫øt gi·ªù!");
                        submitQuiz();
                    }
                }, 1000);
            }
            $(document).on('click', '.speak-button', function() {
                const textToSpeak = $(this).data('text');
                speakText(textToSpeak);
            });
    
            function speakText(text) {
                if ('speechSynthesis' in window) {
                    const utterance = new SpeechSynthesisUtterance(text);
                    utterance.lang = 'en-US';
                    window.speechSynthesis.speak(utterance);
                } else {
                    alert('Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ Speech Synthesis.');
                }
            }
            $(document).on('click', '.submit-answer', function() {
                const index = $(this).data('index');
                const questionCard = $(this).closest('.question-card');
                const correctAnswer = questionCard.data('correct-answer');
                const explanation = questionCard.data('explanation');
    
                const selectedAnswer = $(`input[name="answer-${index}"]:checked`, `#question-form-${index}`).val();
    
                if (!selectedAnswer) {
                    alert("Vui l√≤ng ch·ªçn m·ªôt ƒë√°p √°n.");
                    return;
                }
    
                const isCorrect = selectedAnswer === correctAnswer;
                $(`input[name="answer-${index}"]:checked + .option-label`, `#question-form-${index}`).addClass('correct-answer');
                questionCard.find('.explanation').html(`B·∫°n ƒë√£ tr·∫£ l·ªùi ƒë√∫ng.<br> Gi·∫£i th√≠ch: ${explanation}`).show();
                $(`#question-btn-${index}`).css('background-color', '#28a745').css('color', 'white');
                if (!isCorrect) {
                    $(`input[name="answer-${index}"]:checked + .option-label`, `#question-form-${index}`).addClass('incorrect-answer');
                    $(`input[name="answer-${index}"][value="${correctAnswer}"] + .option-label`, `#question-form-${index}`).addClass('correct-answer');
                    questionCard.find('.explanation').html(`B·∫°n ƒë√£ tr·∫£ l·ªùi sai. ƒê√°p √°n ƒë√∫ng l√†: ${correctAnswer}. <br> Gi·∫£i th√≠ch: ${explanation}`).show();
                    $(`#question-btn-${index}`).css('background-color', '#dc3545').css('color', 'white');
                }
    
                if (isCorrect) {
                    correctAnswers++;
                }
    
                $(`#question-form-${index} input`).prop('disabled', true).addClass('disabled');
                $(this).prop('disabled', true).addClass('disabled');
            });
            
            $(document).on('click', '.record-btn', function () {
                const index = $(this).data('index');
                const status = $(`#recording-status-${index}`);
                const recordButton = $(this);
                const audioElement = $(`#user-audio-${index}`);

                if (recordButton.text() === 'D·ª´ng ghi √¢m') {
                    if (mediaRecorder) {
                        mediaRecorder.stop();
                        recordButton.text('Ghi √¢m');
                        status.hide();
                    }
                } else {
                    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                        navigator.mediaDevices.getUserMedia({ audio: true })
                            .then(stream => {
                                mediaRecorder = new MediaRecorder(stream);
                                audioChunks = [];
                                mediaRecorder.start();
                                status.show().text('ƒêang ghi √¢m...');
                                recordButton.text('D·ª´ng ghi √¢m');

                                mediaRecorder.ondataavailable = (event) => {
                                    audioChunks.push(event.data);
                                };

                                mediaRecorder.onstop = () => {
                                    const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
                                    const audioURL = URL.createObjectURL(audioBlob);
                                    audioElement.attr('src', audioURL);
                                    audioElement.show();
                                    uploadAudio(audioBlob, index);
                                };
                            })
                            .catch(error => {
                                console.error('L·ªói khi truy c·∫≠p microphone', error);
                                alert('Kh√¥ng th·ªÉ truy c·∫≠p v√†o microphone. Vui l√≤ng ki·ªÉm tra quy·ªÅn truy c·∫≠p microphone.');
                            });
                    } else {
                        alert('Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ ghi √¢m.');
                    }
                }
            });


            $('#submitQuizBtn').click(function() {
                if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën n·ªôp b√†i?')) {
                    clearInterval(timer);
                    submitQuiz();
                }
            });
            function submitQuiz() {
                const timeTaken = 20 * 60 - timeRemaining;
                const minutesTaken = Math.floor(timeTaken / 60);
                const secondsTaken = timeTaken % 60;
    
                $('.time-remaining, .question-list, #submitQuizBtn, #questionListTitle').hide();
                $('#completed-info').show();
                $('#completedTime').text(`${minutesTaken}:${secondsTaken < 10 ? '0' + secondsTaken : secondsTaken}`);
                showResultScreen();
            }
    
            function showResultScreen() {
                let percentageCorrect = 0;
                const incorrectAnswers = totalQuestions - correctAnswers;
                if (totalQuestions > 0) {
                    percentageCorrect = (correctAnswers / totalQuestions) * 100;
                }
                
                const iconSrc = percentageCorrect >= 50 ? '/static/images/iconhappy.png' : '/static/images/iconsad.png';

                const resultHtml = `
                    <div class="result-screen text-center">
                        <h2 class="text-center">K·∫æT QU·∫¢ B√ÄI LUY·ªÜN T·∫¨P PH√ÅT √ÇM</h2>
                        <div class="row">
                            <div class="col-md-6 result-content">
                                <p>T·ªïng s·ªë c√¢u: <span class="result-number">${totalQuestions}</span></p>
                                <p>S·ªë c√¢u ƒë√∫ng: <span class="result-number correct">${correctAnswers}</span></p>
                                <p>S·ªë c√¢u sai: <span class="result-number incorrect">${incorrectAnswers}</span></p>
                                <p>T·ª∑ l·ªá ƒë√∫ng: <span class="result-percentage">${percentageCorrect.toFixed(2)}%</span></p>
                            </div>
                            <div class="col-md-6 text-center result-icon">
                                <img src="${iconSrc}" alt="Icon k·∫øt qu·∫£">
                            </div>
                        </div>
                        <div class="d-flex flex-column align-items-center mt-5">
                            <button class="btn btn-danger" style="width: 200px; margin-bottom: 10px;" onclick="location.reload()">L√†m l·∫°i</button>
                            <button class="btn btn-secondary" style="width: 200px;" onclick="location.href='/pronunciation-exercise'">Tho√°t</button>
                        </div>
                    </div>
                `;
                $('.exercises-detail-container').html(resultHtml);
            }

    
            startTimer();
        });

        function uploadAudio(audioBlob, index) {
            const formData = new FormData();
            formData.append('audio', audioBlob, 'recording.wav');
            const exerciseId = window.location.pathname.split('/').pop();

            $.ajax({
                url: `/pronunciation-exercise/analyze/${exerciseId}/${index}`,
                method: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function(response) {
                    displayAnalysisResult(response, index);
                },
                error: function(error) {
                    console.error('L·ªói khi t·∫£i l√™n v√† ph√¢n t√≠ch √¢m thanh:', error);
                    alert('ƒê√£ x·∫£y ra l·ªói khi ph√¢n t√≠ch gi·ªçng n√≥i.');
                }
            });
        }

        function displayAnalysisResult(response, index) {
            if (response.success) {
                const transcriptionWords = response.transcription.replace(/[^a-zA-Z\s]/g, '').toLowerCase().split(' ');
                const correctAnswerWords = $(`#ques-${index} .question-text`).text().replace(/[^a-zA-Z\s]/g, '').toLowerCase().split(' ');

                let matchCount = 0;
                const totalCount = correctAnswerWords.length;
                let detailedAnalysisHTML = "<p><strong>Chi ti·∫øt ph√°t √¢m: </strong> ";

                correctAnswerWords.forEach((correctWord, i) => {
                    const transWord = transcriptionWords[i] || "";

                    if (correctWord === transWord) {
                        detailedAnalysisHTML += `<span class="correct-word">${correctWord} </span>`;
                        matchCount++;
                    } else if (transcriptionWords.includes(correctWord)) {
                        detailedAnalysisHTML += `<span class="correct-word">${correctWord} </span>`;
                        matchCount++;
                    } else {
                        detailedAnalysisHTML += `<span class="incorrect-word">${correctWord} </span>`;
                    }
                });

                detailedAnalysisHTML += "</p>";
                
                const accuracy = ((matchCount / totalCount) * 100).toFixed(2);
                
                let accuracyColorClass = "";
                let message = "";
                if (accuracy < 50) {
                    accuracyColorClass = "red";
                    message = "C·∫ßn h·ªçc l·∫°i ph√°t √¢m.";
                } else if (accuracy >= 50 && accuracy < 75) {
                    accuracyColorClass = "orange";
                    message = "Ph√°t √¢m kh√°, c·∫ßn c·∫£i thi·ªán th√™m.";
                } else {
                    accuracyColorClass = "green";
                    message = "Ph√°t √¢m t·ªët, gi·ªØ v·ªØng phong ƒë·ªô!";
                }

                $(`#accuracyDisplay-${index}`).text(`${accuracy}%`).removeClass('green orange red').addClass(accuracyColorClass);
                
                $(`#detailedAnalysis-${index}`).html(`
                    <p class="analysis-message" style="color:${accuracyColorClass};">${message}</p>
                    <p style="margin-top: 15px;"><strong>K·∫øt qu·∫£ ph√¢n t√≠ch:</strong> "${response.transcription}"</p>
                    ${detailedAnalysisHTML}
                `);

                const analysisResultElement = document.getElementById(`analysisResult-${index}`);
                if (analysisResultElement) {
                    analysisResultElement.style.display = "block";
                } else {
                    console.error(`Element with id 'analysisResult-${index}' not found.`);
                }
            } else {
                alert(response.message || "L·ªói khi ph√¢n t√≠ch gi·ªçng n√≥i");
            }
        }
    </script>  
    <script src="/static/js/jquery-1.12.1.min.js"></script>
    <script src="/static/js/popper.min.js"></script>
    <script src="/static/js/bootstrap.min.js"></script>
    <script src="/static/js/jquery.magnific-popup.js"></script>
    <script src="/static/js/swiper.min.js"></script>
    <script src="/static/js/masonry.pkgd.js"></script>
    <script src="/static/js/owl.carousel.min.js"></script>
    <script src="/static/js/jquery.nice-select.min.js"></script>
    <script src="/static/js/slick.min.js"></script>
    <script src="/static/js/jquery.counterup.min.js"></script>
    <script src="/static/js/waypoints.min.js"></script>
    <script src="/static/js/custom.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>   
</body>
</html>