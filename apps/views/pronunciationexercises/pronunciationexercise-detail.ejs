<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= exercise.title %></title>
    <!-- Bootstrap v√† jQuery -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <link rel="icon" href="/static/images/favicon2.png">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/static/css/bootstrap.min.css">
    <!-- Animate CSS -->
    <link rel="stylesheet" href="/static/css/animate.css">
    <!-- Owl Carousel CSS -->
    <link rel="stylesheet" href="/static/css/owl.carousel.min.css">
    <!-- Themify Icons -->
    <link rel="stylesheet" href="/static/css/themify-icons.css">
    <!-- Flaticon CSS -->
    <link rel="stylesheet" href="/static/css/flaticon.css">
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="/static/css/magnific-popup.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <!-- Swiper CSS -->
    <link rel="stylesheet" href="/static/css/slick.css">
    <link rel="stylesheet" href="/static/css/style.css">
    <link rel="stylesheet" href="/static/css/main.css">
    <style>
        .exercises-container {
            margin: 105px auto 30px auto;
            max-width: 800px;
            min-width: 300px;
            padding: 25px;
            box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            background-color: #fff;
        }
        .form-check {
            padding-left: 0;
        }
        .option-label {
            display: block;
            padding: 10px;
            border: 1px solid #ced4da;
            border-radius: 5px;
            margin-bottom: 10px;
            cursor: pointer;
            background-color: #fff;
        }

        .option-label:hover {
            background-color: #f8f9fa;
        }

        .option-input {
            display: none;
        }

        .option-input:checked + .option-label {
            background-color: #e9ecef;
            font-weight: bold;
        }

        .btn {
            width: 100%;
        }

        .time-remaining {
            font-size: 22px;
            font-weight: bold;
            margin-bottom: 20px;
        }

        .submit-btn {
            background-color: #28a745;
            color: white;
            padding: 10px;
            border-radius: 4px;
            width: 100%;
        }

        .record-btn {
            background-color: #17a2b8;
            color: white;
        }

        .correct-answer {
            background-color: #aceebb !important;
        }

        .incorrect-answer {
            background-color: #eab3b8 !important;
        }

        .speaker-icon {
            cursor: pointer;
            margin-left: 10px;
            font-size: 20px;
            color: #007bff;
        }

        .explanation {
            border: 1px solid cadetblue;
            line-height: 1.8;
            padding: 10px;
            font-size: 15px;
            font-weight: bold;
        }
        .correct-answer {
            background-color: #aceebb !important;
            font-weight: bold !important;
        }
        .incorrect-answer {
            background-color: #eab3b8 !important;
            font-weight: bold !important;
        }
        .btn {
            width: 100%;
        }
        .result-content {
            text-align: center;
        }
        .result-content p{
            margin: 20px 0;
            color: black;
            font-size: 16px;
        }
        .result-number {
            font-weight: bold;
            color: black;
            font-size: 16px;
        }
        .result-percentage {
            font-size: 16px;
            color: #17a2b8;
        }
        .result-icon {
            display: flex;
            align-items: center;
            justify-content: flex-start;
        }

        .result-icon img {
            width: 200px;
            height: auto;
        }

        /* Ph·∫ßn b√™n ph·∫£i - th·ªùi gian v√† danh s√°ch c√¢u h·ªèi */
        .sidebar {
            margin: 105px auto 30px auto;
            padding: 25px;
            box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            background-color: #fff;
        }

        .time-remaining {
            font-size: 22px;
            font-weight: bold;
            margin-bottom: 20px;
        }

        .question-list {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 10px;
        }

        .question-list button {
            background-color: #fff;
            color: #333;
            border: 1px solid black;
            padding: 5px;
            font-size: 13px;
            border-radius: 4px;
            cursor: pointer;
        }
        .question-list button.active {
            background-color: #6c757d;
        }

        .question-list button:hover {
            background-color: #0057b3;
            color: white;
        }
        .speak-button {
            border: 1px solid #9ba0a6;
            background-color: #ffffff;
        }
        #speak-choice {
            padding: 30px;
            font-size: 25px;
        }
    </style>
</head>
<body>
    <%- include('../partials/menu.ejs') %>

    <div class="container">
        <div class="row">
            <!-- Pronunciation Exercise Area -->
            <div class="col-md-8">
                <div class="container exercises-container">
                    <div id="exerciseCarousel" class="carousel slide" data-ride="carousel" data-interval="false">
                        <div class="carousel-inner">
                            <% exercise.questions.forEach((question, index) => { %>
                                <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                                    <div class="question-card p-3" data-correct-answer="<%= question.correctAnswer %>" data-explanation="<%= question.explanation %>" data-type="<%= question.type %>">
                                        <!-- Multiple Choice Question -->
                                        <% if (question.type === 'multiple-choice') { %>
                                            <h4>Nghe v√† ch·ªçn ƒë√°p √°n ph√°t √¢m ƒë√∫ng: </h4>
                                            <h5 style="margin-top: 20px; line-height: 1.8;" id="ques-<%= index %>">
                                                Question <%= index + 1 %>:
                                                <span class="question-text" style="display: none;"><%= question.question %></span>
                                            </h5>
                                            <div class="d-flex justify-content-center align-items-center mt-3">
                                                <button id="speak-choice" class="speak-button btn-sm btn-outline" data-text="<%= question.question %>">üîä</button>
                                            </div>                                                                                                                                                                               
                                            <form id="question-form-<%= index %>" class="mt-4">
                                                <% question.options
                                                    .filter(option => option.trim() !== '')  // L·ªçc c√°c ƒë√°p √°n kh√¥ng tr·ªëng
                                                    .forEach((option, optIndex) => { %>    
                                                    <div class="form-check">
                                                        <input class="option-input" type="radio" name="answer" value="<%= option %>" id="option-<%= optIndex %>-<%= index %>">
                                                        <label class="option-label" for="option-<%= optIndex %>-<%= index %>">
                                                            <%= option %>
                                                        </label>
                                                    </div>
                                                <% }) %>
                                                <div class="explanation mt-4" style="display: none;"></div>
                                                <button type="button" class="btn btn-success submit-answer mt-4" data-index="<%= index %>">Ki·ªÉm tra</button>
                                            </form>
                                        <% } %> <!-- ƒê√¢y l√† d·∫•u ƒë√≥ng ƒë√∫ng c·ªßa if -->

                                        <!-- Pronunciation Question -->
                                        <% if (question.type === 'pronunciation') { %>
                                            <h4>Ph√°t √¢m l·∫°i sao cho ƒë√∫ng:</h4>
                                            <h5 style="margin-top: 20px; line-height: 1.8" id="ques-<%= index %>">
                                                <button class="speak-button btn-sm btn-outline mr-2" data-text="<%= question.question %>">üîä</button>
                                                Question <%= index + 1 %>:  <%= question.question %>
                                            </h5>   

                                            <div class="mt-4">
                                                <button type="button" class="btn record-btn" id="record-answer-<%= index %>" data-index="<%= index %>">B·∫Øt ƒë·∫ßu ghi √¢m</button>
                                                <p id="recording-status-<%= index %>" style="display: none; color: red;">ƒêang ghi √¢m...</p>
                                                <audio id="user-audio-<%= index %>" controls style="display: none;"></audio>
                                            </div>
                                            <div class="explanation mt-4" style="display: none;"></div>
                                            <button type="button" class="btn btn-success submit-answer mt-4" data-index="<%= index %>">Ki·ªÉm tra</button>
                                        <% } %>

                                        <!-- Navigation buttons -->
                                        <div class="d-flex justify-content-between mt-3">
                                            <button class="btn btn-secondary prev-slide" type="button" data-slide="prev" <%= index === 0 ? 'disabled' : '' %>>Quay l·∫°i</button>
                                            <button class="btn btn-secondary next-slide ml-5" type="button" data-slide="next" <%= index === exercise.questions.length - 1 ? 'disabled' : '' %>>Ti·∫øp theo</button>
                                        </div>
                                    </div>
                                </div>
                            <% }) %>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="sidebar">
                    <!-- Th·ªùi gian c√≤n l·∫°i ho·∫∑c ƒë√£ l√†m -->
                    <div class="time-remaining text-center">
                        <span id="timeLabel">Th·ªùi gian c√≤n l·∫°i:</span> <span id="time">20:00</span>
                    </div>
                    
                    <!-- N√∫t n·ªôp b√†i -->
                    <button id="submitQuizBtn" class="btn btn-primary submit-btn mb-4">N·ªôp b√†i</button>
                    
                    <!-- Danh s√°ch c√¢u h·ªèi -->
                    <h5 id="questionListTitle">Danh s√°ch c√¢u h·ªèi:</h5>
                    <div class="question-list mt-3">
                        <% exercise.questions.forEach((question, index) => { %>
                            <button class="question-number" id="question-btn-<%= index %>" data-index="<%= index %>"><%= index + 1 %></button>
                        <% }) %>
                    </div>
                    
                    <!-- Th·ªùi gian ƒë√£ l√†m v√† n√∫t xem l·ªãch s·ª≠ -->
                    <div id="completed-info" style="display: none; text-align: center;">
                        <h4>Th·ªùi gian ƒë√£ l√†m: <span id="completedTime"></span></h4>
                        <button class="btn btn-secondary mt-3" id="viewHistoryBtn">Xem l·ªãch s·ª≠</button>
                    </div>
  
                </div>
            </div>
            
        </div>
    </div>
    <%- include('../partials/footer.ejs') %>
    <script>
        $(document).ready(function() {
            let timeRemaining = 20 * 60; // 20 minutes
            let correctAnswers = 0; // ƒê·∫øm s·ªë c√¢u tr·∫£ l·ªùi ƒë√∫ng
            let totalQuestions = $('.carousel-item').length;
            let timer;
            let mediaRecorder;
            let audioChunks = [];

            // B·∫Øt ƒë·∫ßu ƒë·∫øm ng∆∞·ª£c th·ªùi gian
            function startTimer() {
                timer = setInterval(() => {
                    let minutes = Math.floor(timeRemaining / 60);
                    let seconds = timeRemaining % 60;
                    seconds = seconds < 10 ? '0' + seconds : seconds;
                    $('#time').text(minutes + ":" + seconds);
                    timeRemaining--;
                    if (timeRemaining < 0) {
                        clearInterval(timer);
                        alert("H·∫øt gi·ªù!");
                        submitQuiz();
                    }
                }, 1000);
            }

            $('.speak-button').click(function() {
                const textToSpeak = $(this).data('text'); // L·∫•y n·ªôi dung t·ª´ thu·ªôc t√≠nh data-text
                speakText(textToSpeak);
            });

            function speakText(text) {
                if ('speechSynthesis' in window) {
                    const utterance = new SpeechSynthesisUtterance(text);
                    utterance.lang = 'en-US'; // B·∫°n c√≥ th·ªÉ thay ƒë·ªïi ng√¥n ng·ªØ n·∫øu c·∫ßn
                    window.speechSynthesis.speak(utterance);
                } else {
                    alert('Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ Speech Synthesis.');
                }
            }

            // Di chuy·ªÉn qua c√°c c√¢u h·ªèi
            $('.next-slide').click(() => $('#exerciseCarousel').carousel('next'));
            $('.prev-slide').click(() => $('#exerciseCarousel').carousel('prev'));

            $('.question-number').click(function() {
                const index = $(this).data('index');
                $('#exerciseCarousel').carousel(index);
            });
            // S·ª± ki·ªán khi ng∆∞·ªùi d√πng ch·ªçn c√¢u tr·∫£ l·ªùi v√† ki·ªÉm tra ƒë√°p √°n
            $('.submit-answer').click(function() {
                const index = $(this).data('index');
                const questionCard = $(this).closest('.question-card');
                const questionType = questionCard.data('type');
                const correctAnswer = questionCard.data('correct-answer');
                const explanation = questionCard.data('explanation');

                // Ch·ªâ x·ª≠ l√Ω c√¢u h·ªèi n·∫øu n√≥ l√† "multiple-choice"
                if (questionType === 'multiple-choice') {
                    const selectedAnswer = $(`input[name="answer"]:checked`, `#question-form-${index}`).val();

                    if (!selectedAnswer) {
                        alert("Vui l√≤ng ch·ªçn m·ªôt ƒë√°p √°n.");
                        return;
                    }

                    const isCorrect = selectedAnswer === correctAnswer;
                    $(`input[name="answer"]:checked + .option-label`, `#question-form-${index}`).addClass('correct-answer');
                    questionCard.find('.explanation').html(`B·∫°n ƒë√£ tr·∫£ l·ªùi ƒë√∫ng.<br> Gi·∫£i th√≠ch: ${explanation}`).show();
                    $(`#question-btn-${index}`).css('background-color', '#28a745').css('color', 'white');
                    if (!isCorrect) {
                        $(`input[name="answer"]:checked + .option-label`, `#question-form-${index}`).addClass('incorrect-answer');
                        $(`input[name="answer"][value="${correctAnswer}"] + .option-label`, `#question-form-${index}`).addClass('correct-answer');
                        questionCard.find('.explanation').html(`B·∫°n ƒë√£ tr·∫£ l·ªùi sai. ƒê√°p √°n ƒë√∫ng l√†: ${correctAnswer}. <br> Gi·∫£i th√≠ch: ${explanation}`).show();
                        $(`#question-btn-${index}`).css('background-color', '#dc3545').css('color', 'white');
                    }

                    if (isCorrect) {
                        correctAnswers++; // C·ªông s·ªë c√¢u tr·∫£ l·ªùi ƒë√∫ng
                    }

                    // Kh√≥a c√¢u h·ªèi sau khi ng∆∞·ªùi d√πng ƒë√£ tr·∫£ l·ªùi
                    $(`#question-form-${index} input`).prop('disabled', true).addClass('disabled');
                    $(this).prop('disabled', true).addClass('disabled');
                } else {
                    // N·∫øu kh√¥ng ph·∫£i c√¢u h·ªèi "multiple-choice", b·∫°n c√≥ th·ªÉ x·ª≠ l√Ω c√°c lo·∫°i c√¢u h·ªèi kh√°c ·ªü ƒë√¢y
                    alert("ƒê√¢y kh√¥ng ph·∫£i c√¢u h·ªèi d·∫°ng tr·∫Øc nghi·ªám.");
                }
            });

            $('.record-btn').click(function() {
                const index = $(this).data('index');
                const status = $(`#recording-status-${index}`);
                const userAudio = $(`#user-audio-${index}`);
                const recordButton = $(this);
                
                // N·∫øu ng∆∞·ªùi d√πng ƒëang ghi √¢m th√¨ d·ª´ng ghi √¢m
                if (recordButton.text() === 'D·ª´ng ghi √¢m') {
                    mediaRecorder.stop();  // D·ª´ng ghi √¢m
                    recordButton.text('B·∫Øt ƒë·∫ßu ghi √¢m');  // ƒê·∫∑t l·∫°i n√∫t th√†nh "B·∫Øt ƒë·∫ßu ghi √¢m"
                    status.hide();  // ·∫®n th√¥ng b√°o "ƒêang ghi √¢m"
                } else {
                    // N·∫øu tr√¨nh duy·ªát h·ªó tr·ª£ ghi √¢m, b·∫Øt ƒë·∫ßu ghi √¢m
                    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                        navigator.mediaDevices.getUserMedia({ audio: true })
                            .then(stream => {
                                mediaRecorder = new MediaRecorder(stream);
                                audioChunks = [];
                                mediaRecorder.start();
                                status.show().text('ƒêang ghi √¢m...');  // Hi·ªÉn th·ªã th√¥ng b√°o ghi √¢m
                                recordButton.text('D·ª´ng ghi √¢m');  // ƒê·ªïi n√∫t th√†nh "D·ª´ng ghi √¢m"

                                mediaRecorder.ondataavailable = (event) => {
                                    audioChunks.push(event.data);
                                };

                                mediaRecorder.onstop = () => {
                                    const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
                                    const audioUrl = URL.createObjectURL(audioBlob);
                                    userAudio.attr('src', audioUrl);
                                    userAudio.show();  // Hi·ªÉn th·ªã b·∫£n ghi √¢m
                                };
                            })
                            .catch(error => {
                                console.error('L·ªói khi truy c·∫≠p microphone', error);
                                alert('L·ªói kh√¥ng th·ªÉ truy c·∫≠p v√†o microphone');
                            });
                    } else {
                        alert('Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ ghi √¢m.');
                    }
                }
            });


            // X·ª≠ l√Ω s·ª± ki·ªán n·ªôp b√†i
            $('#submitQuizBtn').click(function() {
                if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën n·ªôp b√†i?')) {
                    clearInterval(timer);
                    submitQuiz(); // G·ªçi h√†m n·ªôp b√†i khi ng∆∞·ªùi d√πng x√°c nh·∫≠n
                }
            });

            // H√†m n·ªôp b√†i v√† chuy·ªÉn qua m√†n h√¨nh k·∫øt qu·∫£
            function submitQuiz() {
                // T√≠nh th·ªùi gian ƒë√£ l√†m b√†i
                const timeTaken = 20 * 60 - timeRemaining;
                const minutesTaken = Math.floor(timeTaken / 60);
                const secondsTaken = timeTaken % 60;

                // ·∫®n c√°c ph·∫ßn giao di·ªán kh√¥ng c·∫ßn thi·∫øt
                $('.time-remaining, .question-list, #submitQuizBtn, #questionListTitle').hide();
                $('#completed-info').show();
                $('#completedTime').text(`${minutesTaken}:${secondsTaken < 10 ? '0' + secondsTaken : secondsTaken}`);

                // Hi·ªÉn th·ªã k·∫øt qu·∫£
                showResultScreen();
            }

            // H√†m hi·ªÉn th·ªã k·∫øt qu·∫£
            function showResultScreen() {
                const percentageCorrect = (correctAnswers / totalQuestions) * 100;
                const iconSrc = percentageCorrect >= 50 ? '/static/images/iconhappy.png' : '/static/images/iconsad.png';
                
                // N·ªôi dung k·∫øt qu·∫£
                const resultHtml = `
                    <div class="result-screen text-center">
                        <h2 class="text-center">K·∫øt qu·∫£ b√†i Luy·ªán t·∫≠p</h2>
                        <div class="row">
                            <div class="col-md-6 result-content">
                                <p>T·ªïng s·ªë c√¢u: <span class="result-number">${totalQuestions}</span></p>
                                <p>S·ªë c√¢u ƒë√∫ng: <span class="result-number correct">${correctAnswers}</span></p>
                                <p>S·ªë c√¢u sai: <span class="result-number incorrect">${totalQuestions - correctAnswers}</span></p>
                                <p>T·ª∑ l·ªá ƒë√∫ng: <span class="result-percentage">${percentageCorrect.toFixed(2)}%</span></p>
                            </div>
                            <div class="col-md-6 text-center result-icon">
                                <img src="${iconSrc}" alt="Icon k·∫øt qu·∫£">
                            </div>
                        </div>
                        <div class="d-flex flex-column align-items-center mt-3">
                            <button class="btn btn-danger" style="width: 200px; margin-bottom: 10px;" onclick="location.reload()">L√†m l·∫°i</button>
                            <button class="btn btn-secondary" style="width: 200px;" onclick="location.href='/pronunciation-exercise'">Tho√°t</button>
                        </div>
                    </div>
                `;

                // Thay th·∫ø n·ªôi dung b√†i t·∫≠p b·∫±ng k·∫øt qu·∫£
                $('.exercises-container').html(resultHtml);
            }

            startTimer(); // Kh·ªüi ƒë·ªông b·ªô ƒë·∫øm th·ªùi gian
        });

    </script>    
    <script src="/static/js/jquery-1.12.1.min.js"></script>
    <script src="/static/js/popper.min.js"></script>
    <script src="/static/js/bootstrap.min.js"></script>
    <script src="/static/js/jquery.magnific-popup.js"></script>
    <script src="/static/js/swiper.min.js"></script>
    <script src="/static/js/masonry.pkgd.js"></script>
    <script src="/static/js/owl.carousel.min.js"></script>
    <script src="/static/js/jquery.nice-select.min.js"></script>
    <script src="/static/js/slick.min.js"></script>
    <script src="/static/js/jquery.counterup.min.js"></script>
    <script src="/static/js/waypoints.min.js"></script>
    <script src="/static/js/custom.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>   
</body>
</html>